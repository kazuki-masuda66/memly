
      const https = require('https');
      const fs = require('fs');
      const { getCaptions } = require('youtube-caption-extractor');
      
      // YouTubeの基本情報を取得する関数
      function getVideoInfo(videoId) {
        return new Promise((resolve, reject) => {
          const options = {
            hostname: 'www.googleapis.com',
            path: '/youtube/v3/videos?id=${videoId}&part=snippet&key=${process.env.YOUTUBE_API_KEY || ''}',
            method: 'GET'
          };
          
          const req = https.request(options, (res) => {
            let data = '';
            
            res.on('data', (chunk) => {
              data += chunk;
            });
            
            res.on('end', () => {
              try {
                const result = JSON.parse(data);
                resolve(result);
              } catch (e) {
                reject(e);
              }
            });
          });
          
          req.on('error', (e) => {
            reject(e);
          });
          
          req.end();
        });
      }
      
      // メイン処理
      async function main() {
        try {
          console.log('動画情報の取得を開始します...');
          const info = await getVideoInfo('W0vNQ5JIiUY');
          
          // API_KEYがない場合は模擬データを返す
          let result = {};
          let captionText = '';
          
          if (!process.env.YOUTUBE_API_KEY) {
            console.log('警告: YOUTUBE_API_KEYが設定されていないため、モックデータを使用します');
            result = {
              title: "YouTube動画 W0vNQ5JIiUY",
              description: "これはYouTube APIキーが設定されていないため生成されたモックデータです。実際のAPIキーを設定すると、本物の動画タイトルと説明文を取得できます。",
              publishedAt: new Date().toISOString(),
              videoId: "W0vNQ5JIiUY",
              thumbnailUrl: "https://i.ytimg.com/vi/W0vNQ5JIiUY/default.jpg",
              captions: "モック字幕データ"
            };
          } else {
            // APIレスポンスからビデオ情報を抽出
            if (info.items && info.items.length > 0) {
              const snippet = info.items[0].snippet;
              
              // 字幕の取得を試みる
              console.log('字幕の取得を開始します...');
              try {
                const captions = await getCaptions({
                  videoId: "W0vNQ5JIiUY",
                  lang: "ja", // 日本語の字幕を優先
                });
                
                if (captions && captions.length > 0) {
                  // 字幕テキストを連結
                  captionText = captions.map(caption => caption.text).join(' ');
                  console.log(`字幕を取得しました (${captionText.length} 文字)`);
                } else {
                  console.log('日本語の字幕が見つかりませんでした。代替言語を試します...');
                  // 日本語が見つからない場合は英語を試みる
                  const enCaptions = await getCaptions({
                    videoId: "W0vNQ5JIiUY",
                    lang: "en", // 英語の字幕
                  });
                  
                  if (enCaptions && enCaptions.length > 0) {
                    captionText = enCaptions.map(caption => caption.text).join(' ');
                    console.log(`英語の字幕を取得しました (${captionText.length} 文字)`);
                  } else {
                    console.log('英語の字幕も見つかりませんでした。自動生成字幕を試します...');
                    // 自動生成字幕を試みる
                    const autoCaptions = await getCaptions({
                      videoId: "W0vNQ5JIiUY",
                      lang: "ja", // 日本語の自動生成字幕
                      autoGenerated: true
                    });
                    
                    if (autoCaptions && autoCaptions.length > 0) {
                      captionText = autoCaptions.map(caption => caption.text).join(' ');
                      console.log(`自動生成字幕を取得しました (${captionText.length} 文字)`);
                    } else {
                      console.log('字幕が見つかりませんでした');
                      captionText = '字幕が見つかりませんでした';
                    }
                  }
                }
              } catch (captionError) {
                console.error('字幕取得エラー:', captionError);
                captionText = '字幕の取得中にエラーが発生しました';
              }
              
              // 結果オブジェクトの作成
              result = {
                title: snippet.title,
                description: snippet.description,
                publishedAt: snippet.publishedAt,
                videoId: "W0vNQ5JIiUY",
                thumbnailUrl: snippet.thumbnails.default.url,
                captions: captionText
              };
            } else {
              throw new Error('ビデオ情報が見つかりませんでした');
            }
          }
          
          // 結果をファイルに書き込む
          fs.writeFileSync('tmp\\95b639b5-1e81-4f83-90eb-5109b9fac9c8.json', JSON.stringify(result));
          process.exit(0);
        } catch (error) {
          console.error('エラー:', error.message);
          process.exit(1);
        }
      }
      
      main();
    